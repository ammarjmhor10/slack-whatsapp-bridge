services:
  - type: worker
    name: queue
    region: frankfurt
    env: 
      - type: python
        PYTHON_VERSION: 3.8.17
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery --app bridge worker --loglevel info --concurrency 4"
    autoDeploy: false
    envVars:
      - key: PYTHON_VERSION
        value: 3.8.17
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
  - type: web
    name: bridge
    region: frankfurt
    env: 
      - type: python
        PYTHON_VERSION: 3.8.17
    buildCommand: ./build.sh
    startCommand: "gunicorn bridge.wsgi:application"
    autoDeploy: false
    envVars:
    - key: PYTHON_VERSION
      value: 3.8.17
    - key: WEB_CONCURRENCY
      value: 4
    - key: DJANGO_SETTINGS_MODULE
      value: bridge.settings.production

    - key: CELERY_BROKER_URL
      fromService:
          name: celery-redis
          type: redis
          property: connectionString
  - type: redis
    name: celery-redis
    region: frankfurt
    plan: starter # we choose a plan with persistence to ensure tasks are not lost upon restart
    maxmemoryPolicy: noeviction # recommended policy for queues
    ipAllowList: [] # only allow internal connections


databases:
- name: bridge-database
  region: frankfurt
  databaseName: django
  user: django